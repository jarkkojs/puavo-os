#!/bin/sh

set -eu

prepare_hp_utils() {
  puavo-pkg install /usr/share/puavo-pkg/packages/hp-bios-utils.tar.gz
  export PATH="/opt/hp/hp-flash:${PATH}"
  hp_utils_dir='/opt/hp/hp-flash'

  ### Create log file solely for gathering errors from curl.
  ### If it already exists, just move it out of the way so we can read it if needed.
  errlogfile="/tmp/puavo-bios-config-curl.log"
  if [ -f "$errlogfile" ]; then
    mv "$errlogfile" "/tmp/puavo-bios-config-curl.log.old"
  fi

  baseurl_git="https://raw.githubusercontent.com/opinsys/opinsys-host-configurations/main/HP"

  studentlaptop="$(cd "$hp_utils_dir" && curl -O --silent --show-error \
   --url "$baseurl_git/HpSetup-student-laptop.txt" \
   --write-out "%{filename_effective}")" 2>> "$errlogfile" || true

  studentlaptop_uefi="$(cd "$hp_utils_dir" && curl -O --silent --show-error \
   --url "$baseurl_git/HpSetup-student-laptop-uefi.txt" \
   --write-out "%{filename_effective}")" 2>> "$errlogfile" || true

  usbfactory="$(cd "$hp_utils_dir" && curl -O --silent --show-error \
   --url "$baseurl_git/HpSetup-usb-factory.txt" \
   --write-out "%{filename_effective}")" 2>> "$errlogfile" || true

  usbfactory_uefi="$(cd "$hp_utils_dir" && curl -O --silent --show-error \
   --url "$baseurl_git/HpSetup-usb-factory-uefi.txt" \
   --write-out "%{filename_effective}")" 2>> "$errlogfile" || true
}

use_hp_utils() {
  prepare_hp_utils

  cat << EOF
> Running Bash for you, the current working directory is "${hp_utils_dir}".
> It has "hp-flash" and "hp-repsetup".
> PATH is $PATH
> Exit Bash when done.
EOF
  (cd "$hp_utils_dir" && bash)
}

hp_wget_latest_and_flash() {
  prepare_hp_utils

  mainboard_sysid=$(dmidecode -s baseboard-product-name)
  hp_ftp_url="https://ftp.ext.hp.com/pub/pcbios"
  (cd "$hp_utils_dir" && \
    wget "$hp_ftp_url/$mainboard_sysid/$mainboard_sysid.xml" && \
    hp_latest_bios="$(xmllint --xpath "string(/BIOS/Rel/@Bin)" $mainboard_sysid.xml)" && \
    wget "$hp_ftp_url/$mainboard_sysid/$hp_latest_bios" && \
    hp-flash "$hp_latest_bios")
}

import_config_student_laptop() {
  prepare_hp_utils

  if [ ! -f "$hp_utils_dir/$studentlaptop" ] && [ "$(cat "$errlogfile" | wc --lines)" -gt 0 ]; then
    echo "Could not find config $studentlaptop in $hp_utils_dir."
    echo "Error log has entries, see $errlogfile."
  else
    (cd "$hp_utils_dir" && hp-repsetup -s "$studentlaptop")
  fi

  echo "Returning to puavo-bios-config menu.\n"
}

import_config_student_laptop_uefi() {
  prepare_hp_utils

  if [ ! -f "$hp_utils_dir/$studentlaptop_uefi" ] && [ "$(cat "$errlogfile" | wc --lines)" -gt 0 ]; then
    echo "Could not find config $studentlaptop_uefi in $hp_utils_dir."
    echo "Error log has entries, see $errlogfile."
  else
    (cd "$hp_utils_dir" && hp-repsetup -s "$studentlaptop_uefi")
  fi

  echo "Returning to puavo-bios-config menu.\n"
}

import_config_usb_stick_factory() {
  prepare_hp_utils

  if [ ! -f "$hp_utils_dir/$usbfactory" ] && [ "$(cat "$errlogfile" | wc --lines)" -gt 0 ]; then
    echo "Could not find config $usbfactory in $hp_utils_dir."
    echo "Error log has entries, see $errlogfile."
  else
    (cd "$hp_utils_dir" && hp-repsetup -s "$usbfactory")
  fi

  echo "Returning to puavo-bios-config menu.\n"
}

import_config_usb_stick_factory_uefi() {
  prepare_hp_utils

  if [ ! -f "$hp_utils_dir/$usbfactory_uefi" ] && [ "$(cat "$errlogfile" | wc --lines)" -gt 0 ]; then
    echo "Could not find config $usbfactory_uefi in $hp_utils_dir."
    echo "Error log has entries, see $errlogfile."
  else
    (cd "$hp_utils_dir" && hp-repsetup -s "$usbfactory_uefi")
  fi

  echo "Returning to puavo-bios-config menu.\n"
}

ask_choice() {
  choices=$(cat <<'EOF'
Flash latest BIOS (HP)
Import Student laptop BIOS Config
Import Student laptop BIOS Config (UEFI)
Import USB Stick factory BIOS Config
Import USB Stick factory BIOS Config (UEFI)
use HP BIOS utilities
exit
EOF
)
  printf "%s" "$choices" | fzf --height=9 --layout=reverse-list --color=bg+:#FFFFFF,fg+:#000000
}

while chosen=$(ask_choice); do
  printf "\n"
  printf ">>> Welcome to puavo-bios-config!\n"
  printf ">>> What do you want to do?\n\n"

  printf ">> You chose '${chosen}'\n"

  case "$chosen" in
    exit)
      exit 0
      ;;
    'Flash latest BIOS (HP)')
      hp_wget_latest_and_flash
      sleep 3
      ;;
    'Import Student laptop BIOS Config')
      import_config_student_laptop
      sleep 3
      ;;
    'Import Student laptop BIOS Config (UEFI)')
      import_config_student_laptop_uefi
      sleep 3
      ;;
    'Import USB Stick factory BIOS Config')
      import_config_usb_stick_factory
      sleep 3
      ;;
    'Import USB Stick factory BIOS Config (UEFI)')
      import_config_usb_stick_factory_uefi
      sleep 3
      ;;
    'use HP BIOS utilities')
      use_hp_utils
      ;;
  esac
done
