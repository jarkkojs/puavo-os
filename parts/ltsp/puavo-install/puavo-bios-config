#!/bin/sh

set -eu
RED="\033[0;31m"
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
NC="\033[0m"

prepare_hp_utils() {
  puavo-pkg install /usr/share/puavo-pkg/packages/hp-bios-utils.tar.gz
  export PATH="/opt/hp/hp-flash:${PATH}"
  hp_utils_dir='/opt/hp/hp-flash'
}

use_hp_utils() {
  prepare_hp_utils

  cat << EOF
> Running Bash for you, the current working directory is "${hp_utils_dir}".
> It has "hp-flash" and "hp-repsetup".
> PATH is $PATH
> Exit Bash when done.
EOF
  (cd "$hp_utils_dir" && bash)
}

flash_latest() {
  prepare_hp_utils

  if [ $# -eq 0 ]; then
    param=""
  else
    param="$1"
    if [ "$param" != "-y" ]; then
      echo "Invalid parameter: '$param'"
      echo "Accepted parameters are: '-y'"
      return 1
    fi
  fi

  mainboard_sysid=$(dmidecode -s baseboard-product-name)
  hp_ftp_url="https://ftp.ext.hp.com/pub/pcbios"
  (cd "$hp_utils_dir" && \

    wget "$hp_ftp_url/$mainboard_sysid/$mainboard_sysid.xml" -O "$mainboard_sysid.xml" && \
    hp_latest_bios="$(xmllint --xpath "string(/BIOS/Rel/@Bin)" "$mainboard_sysid.xml")" && \
    wget "$hp_ftp_url/$mainboard_sysid/$hp_latest_bios" -O "$hp_latest_bios" && \

    providedhash="$(xmllint --xpath "string(/BIOS/Rel[starts-with(@Bin,\"$hp_latest_bios\")]/@Sha384)" "$mainboard_sysid.xml")"
    calculatedhash=$(sha384sum "$hp_latest_bios" | awk '{print $1}')

    if [ -n "$providedhash" ]; then
      echo "Cryptographic hash for the binary was found in the list. Comparing it now."
      if [ "$(printf "%s" "$calculatedhash" | grep -iP "^${providedhash}$")" ] ; then
        printf "${GREEN}The hash is a match, continuing.${NC}"
      else
        printf "${RED}The hash does NOT match, aborting.${NC}\n"
        printf "Calculated hash: %s\nProvided hash: %s\n" "$calculatedhash" "$providedhash"
        return 1
      fi
    else
      printf "${YELLOW}WARNING: No cryptographic hash found for the binary. Proceed with caution.${NC}"
    fi

    hp-flash "$hp_latest_bios" $param)
}

import_config() {
  prepare_hp_utils

  config="$1"
  baseurl_git="https://raw.githubusercontent.com/opinsys/opinsys-host-configurations/main/HP"

  ### Create log file solely for gathering errors from curl.
  ### If it already exists, just move it out of the way so we can read it if needed.
  errlogfile="/tmp/puavo-bios-config-curl.log"

  if [ -f "$errlogfile" ]; then
    mv "$errlogfile" "/tmp/puavo-bios-config-curl.log.old"
  fi

  (cd "$hp_utils_dir" && curl -O --silent --show-error \
   --url "$baseurl_git/$config" \
   --write-out "$config") 2>> "$errlogfile" || true

  if [ ! -f "$hp_utils_dir/$config" ] && [ "$(grep -c . "$errlogfile")" -gt 0 ]; then
    echo "Could not find config $config in $hp_utils_dir. Config was not imported!!"
    echo "Error log has entries, see $errlogfile."
  else
    (cd "$hp_utils_dir" && hp-repsetup -s "$config")
    echo "\nSelected config $config should now be set.\nPlease check the output above to be sure.\n\n"
  fi

  echo "Returning to puavo-bios-config menu.\n"
}

ask_choice() {
  choices=$(cat <<'EOF'
Flash latest BIOS (HP)
Import Student laptop BIOS Config
Import Student laptop BIOS Config (UEFI)
Import USB Stick factory BIOS Config
Import USB Stick factory BIOS Config (UEFI)
use HP BIOS utilities
exit
EOF
)
  printf "%s" "$choices" | fzf --height=9 --layout=reverse-list --color=bg+:#FFFFFF,fg+:#000000
}

printf "\n"
printf ">>> Welcome to puavo-bios-config!\n"
printf ">>> What do you want to do?\n\n"

if [ $# -eq 1 ]; then
  chosen="$1"
  eval $chosen
elif [ $# -eq 2 ]; then
  chosen="$1"
  config="$2"
  eval $chosen $config
else
  while chosen=$(ask_choice); do
    printf ">> You chose '${chosen}'\n"

    case "$chosen" in
      exit)
        exit 0
        ;;
      'Flash latest BIOS (HP)')
        flash_latest "$@"
        sleep 3
        ;;
      'Import Student laptop BIOS Config')
        import_config HpSetup-student-laptop.txt
        sleep 3
        ;;
      'Import Student laptop BIOS Config (UEFI)')
        import_config HpSetup-student-laptop-uefi.txt
        sleep 3
        ;;
      'Import USB Stick factory BIOS Config')
        import_config HpSetup-usb-factory.txt
        sleep 3
        ;;
      'Import USB Stick factory BIOS Config (UEFI)')
        import_config HpSetup-usb-factory-uefi.txt
        sleep 3
        ;;
      'use HP BIOS utilities')
        use_hp_utils
        ;;
    esac
  done
fi
