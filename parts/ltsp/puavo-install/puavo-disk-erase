#!/bin/sh

set -eu

ask_disk() {
  disks=$(awk '$4 ~ /^((md|mmcblk)[0-9]+|nvme[0-9]+n[0-9]+|[sv]d[a-z]|xvd[a-z])$/ {
                 print "/dev/"$4
               }' /proc/partitions)
  [ -n "$disks" ] || return 1
  printf %s "$disks" | fzf -1 --height=5 --layout=reverse-list
}

secure_erase() {
  echo 'Choose a disk to Secure Erase:'
  if ! target_disk=$(ask_disk); then
    echo 'No disk selected, aborting!' >&2
    exit 1
  fi

  echo "Chosen << ${target_disk} >>"
  if ! hdparm -I "${target_disk}" | grep -P "SECURITY ERASE UNIT" >&2; then
    echo 'Selected disk does not support Secure Erase!' >&2
    exit 1
  fi

  echo 'Disk supports Secure Erase.'
  if ! hdparm -I "${target_disk}" | grep -P "not\tfrozen" >&2; then
    echo 'Disk is in frozen state, aborting!' >&2
    echo 'Please close the lid of the device for a few seconds, reopen it and try again.' >&2
    echo
    echo 'If we are netbooted, we can only put the device to sleep by running this command:'
    echo 'echo -n mem > /sys/power/state'
    echo
    read -p "Shall I run the command for you? (y/n)[y] " gosleep
      case $gosleep in
        [yY]|"")
          echo 'Going to sleep now.'
          sleep 1
	  rtcwake -m mem -s 5
          ;;
        [nN])
          echo 'Not going to sleep. You must close and reopen the lid, or run the command by hand. Then retry.'
          sleep 1
          exit 1
          ;;
        *)
          echo 'Invalid answer, exiting.' >&2
          sleep 1
          exit 1
          ;;
      esac
    exit 1
  fi

  echo 'Disk is not in frozen state, we can continue.'
  hdparm --user-master user --security-set-pass Pass "${target_disk}"
  if ! hdparm -I "${target_disk}" | grep -P "Security level high" >&2; then
    echo 'Failed setting user and password, exiting.' >&2
    exit 1
  fi

  echo 'User and password set, ready for secure erase.'
  hdparm --user-master user --security-erase Pass "${target_disk}"
  echo 'Command completed. If you see no errors above, you may now reboot the device.'
}

secure_erase
