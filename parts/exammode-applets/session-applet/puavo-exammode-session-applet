#!/usr/bin/env python3

import dbus
import dbus.mainloop.glib
import gettext
import gi
import json
import signal
import sys
import syslog

gi.require_version('AyatanaAppIndicator3', '0.1')
gi.require_version('Gtk', '3.0')
gi.require_version('Notify', '0.7')

from gi.repository import AyatanaAppIndicator3
from gi.repository import GLib
from gi.repository import Gtk 
from gi.repository import Notify

gettext.bindtextdomain('puavo-exammode-session-applet', '/usr/share/locale')
gettext.textdomain('puavo-exammode-session-applet')
_tr = gettext.gettext

dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)

# XXX should change icon if we have a need for this
ICON_PATH = '/usr/share/icons/Adwaita/64x64/legacy/text-editor-symbolic.symbolic.png'

def logmsg(priority, message):
  print(message, file=sys.stderr)
  syslog.syslog(priority, message)


class PuavoExamModeSessionApplet:
  def __init__(self):
    Notify.init('puavo-exammode-session-applet')

    self.dbus_iface = self.get_dbus_iface()

    self.indicator \
      = AyatanaAppIndicator3.Indicator.new('puavo-exammode-session-applet',
          ICON_PATH, AyatanaAppIndicator3.IndicatorCategory.SYSTEM_SERVICES)
    self.indicator.set_status(AyatanaAppIndicator3.IndicatorStatus.ACTIVE)


  def get_dbus_iface(self):
    bus = dbus.SystemBus()
    dbusobj = bus.get_object('org.puavo.Exam', '/exammode')
    return dbus.Interface(dbusobj, dbus_interface='org.puavo.Exam.exammode')


  def main(self):
    Gtk.main()


exitstatus = 0

# XXX
s = _tr('Available exams:')

syslog.openlog('puavo-exammode-session-applet')

applet = PuavoExamModeSessionApplet()

try:
  signal.signal(signal.SIGINT, signal.SIG_DFL)
  applet.main()
except Exception as e:
  logmsg(syslog.LOG_ERR, 'unexpected error: %s' % e)
  exitstatus = 1

syslog.closelog()

sys.exit(exitstatus)
