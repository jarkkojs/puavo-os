#!/bin/sh

set -eu

command=$1
shift

add_desktop_file_fixer() {
  cat <<'EOF' > /etc/X11/Xsession.d/70fix-chrome-desktop-files
# Change all google-chrome .desktop files to run through
# /usr/bin/google-chrome instead of the (changing) puavo-pkg path.
if [ -d ~/.local/share/applications ]; then
  find ~/.local/share/applications/ -name '*.desktop' -print0 \
    | xargs -0 --no-run-if-empty \
            sed -i '/^Exec=.*google-chrome /s/^Exec=.*\/google-chrome /Exec=\/usr\/bin\/google-chrome-stable /'
fi
EOF
}

write_startup_wrapper() {
  cat <<'EOF' > /usr/bin/google-chrome-stable.tmp
#!/bin/sh

set -eu

browser_running() {
  pgrep -x -U "$USER" chrome >/dev/null
}

manage_preferences() {
  tmpfile="${preferences_file}.tmp"

  if [ -e "$preferences_file" ]; then
    jq "$@" "$preferences_file" > "$tmpfile" || return 1
  else
    jq --null-input "$@" > "$tmpfile" || return 1
  fi

  mv "$tmpfile" "$preferences_file"
}

set_first_homepage() {
  first_homepage=$1

  manage_preferences --arg first_homepage "$first_homepage" '
    .browser.show_home_button = true
    | .homepage = $first_homepage
    | .homepage_is_newtabpage = false
    | .session.restore_on_startup = 4
    | .session.startup_urls = [ $first_homepage ]
  '
}

default_args="--disable-infobars --no-default-browser-check --no-first-run"

if ! browser_running; then
  preferences_dir=~/.config/google-chrome/Default
  preferences_file="${preferences_dir}/Preferences"

  mkdir -p "$preferences_dir"

  first_homepage=$( echo "$HOMEPAGE" | awk -F '|' '{ print $1 }')
  second_homepage=$(echo "$HOMEPAGE" | awk -F '|' '{ print $2 }')

  if [ -n "$first_homepage" ]; then
    if set_first_homepage "$first_homepage"; then
      if [ -n "$second_homepage" ]; then
        manage_preferences --arg second_homepage "$second_homepage" '
          .session.startup_urls += [ $second_homepage ]
        ' || true
      fi
    fi
  fi

  manage_preferences '.browser.custom_chrome_frame = false' || true
fi

exec /usr/bin/google-chrome-stable.puavopkg $default_args \
       --simulate-outdated-no-au='Thu, 31 Dec 2099 23:59:59 GMT' "$@"
EOF
  chmod 755 /usr/bin/google-chrome-stable.tmp
  mv /usr/bin/google-chrome-stable.tmp /usr/bin/google-chrome-stable
}

case "${command}" in
    configure)
        upstream_dir=$1

        chown root:root "${upstream_dir}/opt/google/chrome/chrome-sandbox"
        chmod 4755 "${upstream_dir}/opt/google/chrome/chrome-sandbox"

        mkdir -p /usr/bin
        mkdir -p /usr/share/applications
        mkdir -p /usr/share/man/man1
        mkdir -p /usr/share/icons/hicolor/16x16/apps
        mkdir -p /usr/share/icons/hicolor/22x22/apps
        mkdir -p /usr/share/icons/hicolor/24x24/apps
        mkdir -p /usr/share/icons/hicolor/32x32/apps
        mkdir -p /usr/share/icons/hicolor/48x48/apps
        mkdir -p /usr/share/icons/hicolor/64x64/apps
        mkdir -p /usr/share/icons/hicolor/128x128/apps
        mkdir -p /usr/share/icons/hicolor/256x256/apps

        ln -fns "${upstream_dir}/opt/google/chrome/product_logo_16.png" \
            /usr/share/icons/hicolor/16x16/apps/google-chrome.png
        ln -fns "${upstream_dir}/opt/google/chrome/product_logo_22.png" \
            /usr/share/icons/hicolor/22x22/apps/google-chrome.png
        ln -fns "${upstream_dir}/opt/google/chrome/product_logo_24.png" \
            /usr/share/icons/hicolor/24x24/apps/google-chrome.png
        ln -fns "${upstream_dir}/opt/google/chrome/product_logo_32.png" \
            /usr/share/icons/hicolor/32x32/apps/google-chrome.png
        ln -fns "${upstream_dir}/opt/google/chrome/product_logo_48.png" \
            /usr/share/icons/hicolor/48x48/apps/google-chrome.png
        ln -fns "${upstream_dir}/opt/google/chrome/product_logo_64.png" \
            /usr/share/icons/hicolor/64x64/apps/google-chrome.png
        ln -fns "${upstream_dir}/opt/google/chrome/product_logo_128.png" \
            /usr/share/icons/hicolor/128x128/apps/google-chrome.png
        ln -fns "${upstream_dir}/opt/google/chrome/product_logo_256.png" \
            /usr/share/icons/hicolor/256x256/apps/google-chrome.png
        ln -fns "${upstream_dir}/usr/share/man/man1/google-chrome.1" \
            /usr/share/man/man1/google-chrome.1

        ln -fns "${upstream_dir}/opt/google/chrome/google-chrome" \
            /usr/bin/google-chrome-stable.puavopkg
        write_startup_wrapper
        add_desktop_file_fixer

        sed '/^MimeType=/a\
StartupNotify=true' "${upstream_dir}/usr/share/applications/google-chrome.desktop" \
            > /usr/share/applications/google-chrome.desktop
        ;;
    unconfigure)
        rm -f /etc/X11/Xsession.d/70fix-chrome-desktop-files          \
              /usr/bin/google-chrome-stable                           \
              /usr/bin/google-chrome-stable.puavopkg                  \
              /usr/share/applications/google-chrome.desktop           \
              /usr/share/man/man1/google-chrome.1                     \
              /usr/share/icons/hicolor/256x256/apps/google-chrome.png \
              /usr/share/icons/hicolor/128x128/apps/google-chrome.png \
              /usr/share/icons/hicolor/64x64/apps/google-chrome.png   \
              /usr/share/icons/hicolor/48x48/apps/google-chrome.png   \
              /usr/share/icons/hicolor/32x32/apps/google-chrome.png   \
              /usr/share/icons/hicolor/24x24/apps/google-chrome.png   \
              /usr/share/icons/hicolor/22x22/apps/google-chrome.png   \
              /usr/share/icons/hicolor/16x16/apps/google-chrome.png
        ;;
    unpack)
        upstream_pack=$1
        upstream_dir=$2
        dpkg -x "$upstream_pack" "$upstream_dir"
        chmod 0755 "$upstream_dir"
        ;;
    download)
        # tested with google-chrome-stable_94.0.4606.61-1_amd64.deb
        upstream_pack=$1
        baseurl="https://dl.google.com/linux/chrome/deb"
        tmpfile=$(mktemp)

        wget \
            --no-use-server-timestamps \
            --no-cookies \
            --output-document "${tmpfile}" \
            --progress=dot:mega \
            "${baseurl}/dists/stable/main/binary-amd64/Packages" || {
            wget_err=$?
            rm -f "$tmpfile" || true
            [ ${wget_err} -eq 4 ] && exit 2 ## Network failure.
            exit 1
        }
        poolpath=$(sed -r '0,/^Package: google-chrome-stable$/ d' "${tmpfile}" | sed -r -n 's/^Filename: (.*)/\1/p' | head -n1)
        rm -f "$tmpfile"
        wget \
            --no-use-server-timestamps \
            --no-cookies \
            --output-document "$upstream_pack" \
            "${baseurl}/${poolpath}" || {
            [ $? -eq 4 ] && exit 2 ## Network failure.
            exit 1
        }
        ;;
    *)
        ;;
esac
