#!/bin/sh

set -eu

usage() {
  echo <<EOF
Usage: $(basename "$0") [option]

Resolve local puavo api server from dns.  If the device type is laptop and
dns resolve fails it will return the public server.

  --cloud-fallback    Fallback to cloud puavo-rest if dns lookup fails
  --writable          Search for writable puavo-rest instance
EOF
}

opt_cloud_fallback=false
opt_writable=false

while true; do
  case "${1:-}" in
    -c|--cloud-fallback)
      opt_cloud_fallback=true
      shift
      ;;
    -w|--writable)
      opt_writable=true
      shift
      ;;
    -h|--help)
      usage
      exit 0
      ;;
    --)
      break
      ;;
    '')
      break
      ;;
    *)
      printf "Unknown option %s\n" "${1:-}"
      exit 1
      ;;
  esac
done

puavo_domain=$(cat /etc/puavo/domain)

lookup_puavo_apiserver() {
  cert_version=$(puavo-conf puavo.admin.certs.versions | awk '{ print $1 }')

  host -t SRV -W 1 "_puavo-api_${cert_version}._tcp.${puavo_domain}" \
    | awk -v puavo_domain="$puavo_domain" '
        $2 == "has" && $3 == "SRV" && $4 == "record" {
          sub(/\.$/, "", $8)

          # check that $8 has puavo_domain-suffix
          i = index($8, puavo_domain)
          if (i == 0) { next }
          if ($8 == (substr($8, 0, i-1) puavo_domain)) {
            printf "https://%s:%s\n", $8, $7
            exit(0)
          }
        }'
}

# At the moment only the cloud API server is writable, so we skip the
# query and just fallback to cloud server if write access is requested.
if ! $opt_writable; then
  puavo_apiserver=$(lookup_puavo_apiserver)
  if [ -n "$puavo_apiserver" ]; then
    printf "%s\n" "$puavo_apiserver"
    exit 0
  fi
fi

puavo_hosttype=$(cat /etc/puavo/hosttype)

# Fallback for bootservers, laptops and wirelessaccesspoints
# that are not in the school network.
# (Normally bootservers should always resolve to itself,
# but in case dns is down or bootserver is at an installation stage,
# we can use the cloud api server).
if [    "$puavo_hosttype" = 'bootserver'            \
     -o "$puavo_hosttype" = 'laptop'                \
     -o "$puavo_hosttype" = 'wirelessaccesspoint' ] \
     || $opt_cloud_fallback || $opt_writable; then
  puavo_apiserver=$(puavo-conf puavo.www.apiserver)
  if [ -n "$puavo_apiserver" ]; then
    printf "%s\n" "$puavo_apiserver"
    exit 0
  fi
fi

echo "Failed to resolve api server" >&2
exit 1
