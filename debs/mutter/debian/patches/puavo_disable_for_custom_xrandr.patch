diff -ruN mutter/src/backends/meta-monitor-config-store.c mutter/src/backends/meta-monitor-config-store.c
--- mutter/src/backends/meta-monitor-config-store.c	2023-11-15 13:18:05.000000000 +0200
+++ mutter/src/backends/meta-monitor-config-store.c	2023-11-15 13:19:04.553631770 +0200
@@ -2005,6 +2005,16 @@
   char *user_file_path;
   GError *error = NULL;
   char *monitors_file_path;
+  char *mutter_allow_configuration;
+  gboolean load_user_config = TRUE;
+
+  /* If MUTTER_ALLOW_CONFIGURATION is set and does not contain "user",
+   * do not load user configuration file. */
+  mutter_allow_configuration = getenv("MUTTER_ALLOW_CONFIGURATION");
+  if (mutter_allow_configuration != NULL) {
+    if (strstr(mutter_allow_configuration, "user") == NULL)
+      load_user_config = FALSE;
+  }
 
   monitors_file_path = getenv("MUTTER_MONITOR_FILENAME");
   if (monitors_file_path == NULL)
@@ -2053,7 +2063,7 @@
                                      NULL);
   config_store->user_file = g_file_new_for_path (user_file_path);
 
-  if (g_file_test (user_file_path, G_FILE_TEST_EXISTS))
+  if (load_user_config && g_file_test (user_file_path, G_FILE_TEST_EXISTS))
     {
       if (!read_config_file (config_store,
                              config_store->user_file,
diff -ruN mutter/src/backends/meta-monitor-manager.c mutter/src/backends/meta-monitor-manager.c
--- mutter/src/backends/meta-monitor-manager.c	2023-11-15 13:18:05.000000000 +0200
+++ mutter/src/backends/meta-monitor-manager.c	2023-11-15 13:19:04.553631770 +0200
@@ -687,6 +687,7 @@
     META_MONITORS_CONFIG_METHOD_TEMPORARY;
   MetaMonitorSwitchConfigType config_type;
   char *display_setup;
+  char *mutter_allow_configuration;
 
   use_stored_config = should_use_stored_config (manager);
   if (use_stored_config)
@@ -761,6 +762,16 @@
         }
     }
 
+  /* If MUTTER_ALLOW_CONFIGURATION is set and does not contain "default",
+   * do nothing. */
+  mutter_allow_configuration = getenv("MUTTER_ALLOW_CONFIGURATION");
+  if (mutter_allow_configuration != NULL) {
+    if (strstr(mutter_allow_configuration, "default") == NULL) {
+      g_warning ("Not applying default configuration because of MUTTER_ALLOW_CONFIGURATION settings");
+      return NULL;
+    }
+  }
+
   config = meta_monitor_config_manager_create_suggested (manager->config_manager);
   if (config)
     {
@@ -2649,6 +2660,19 @@
   MetaMonitorsConfig *config;
   GList *logical_monitor_configs = NULL;
   GError *error = NULL;
+  char *mutter_allow_configuration;
+
+  /* If MUTTER_ALLOW_CONFIGURATION is set and does not contain "temporary",
+   * do nothing. */
+  mutter_allow_configuration = getenv("MUTTER_ALLOW_CONFIGURATION");
+  if (mutter_allow_configuration != NULL) {
+    if (strstr(mutter_allow_configuration, "temporary") == NULL) {
+      g_dbus_method_invocation_return_error (invocation, G_DBUS_ERROR,
+                                             G_DBUS_ERROR_ACCESS_DENIED,
+                                             "Permission denied.");
+      return TRUE;
+    }
+  }
 
   if (method == META_MONITORS_CONFIG_METHOD_STOREONLY) {
     if (meta_monitor_manager_handle_current_state (skeleton, invocation, manager, 0)) {
