From: Robert Mader <robert.mader@posteo.de>
Date: Fri, 6 Aug 2021 13:10:52 +0200
Subject: wayland/subsurface: Handle node unlinking on parent destroyed

It concerns subsurface state and the subsurface already listenes
for the parent to get destroyed.

Part-of: <https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/1958>

Bug: https://gitlab.gnome.org/GNOME/mutter/-/issues/1892
Origin: upstream, 3.38.7, commit:60afd63ef581b11b7cd8483d4a83ce24480ed8e8
---
 src/wayland/meta-wayland-subsurface.c |  1 +
 src/wayland/meta-wayland-surface.c    | 16 +---------------
 2 files changed, 2 insertions(+), 15 deletions(-)

diff --git a/src/wayland/meta-wayland-subsurface.c b/src/wayland/meta-wayland-subsurface.c
index e8842a7..6b21b23 100644
--- a/src/wayland/meta-wayland-subsurface.c
+++ b/src/wayland/meta-wayland-subsurface.c
@@ -490,6 +490,7 @@ surface_handle_parent_surface_destroyed (struct wl_listener *listener,
                                                  surface,
                                                  sub.parent_destroy_listener);
 
+  g_node_unlink (surface->subsurface_branch_node);
   surface->sub.parent = NULL;
 }
 
diff --git a/src/wayland/meta-wayland-surface.c b/src/wayland/meta-wayland-surface.c
index 6f9af85..403da52 100644
--- a/src/wayland/meta-wayland-surface.c
+++ b/src/wayland/meta-wayland-surface.c
@@ -1363,13 +1363,6 @@ meta_wayland_surface_notify_unmapped (MetaWaylandSurface *surface)
   g_signal_emit (surface, surface_signals[SURFACE_UNMAPPED], 0);
 }
 
-static void
-unlink_note (GNode    *node,
-             gpointer  data)
-{
-  g_node_unlink (node);
-}
-
 static void
 wl_surface_destructor (struct wl_resource *resource)
 {
@@ -1418,14 +1411,7 @@ wl_surface_destructor (struct wl_resource *resource)
   if (surface->wl_subsurface)
     wl_resource_destroy (surface->wl_subsurface);
 
-  if (surface->subsurface_branch_node)
-    {
-      g_node_children_foreach (surface->subsurface_branch_node,
-                               G_TRAVERSE_NON_LEAVES,
-                               unlink_note,
-                               NULL);
-      g_clear_pointer (&surface->subsurface_branch_node, g_node_destroy);
-    }
+  g_clear_pointer (&surface->subsurface_branch_node, g_node_destroy);
 
   g_hash_table_destroy (surface->shortcut_inhibited_seats);
 
