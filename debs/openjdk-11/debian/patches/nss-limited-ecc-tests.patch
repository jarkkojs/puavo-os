--- a/test/jdk/sun/security/pkcs11/PKCS11Test.java
+++ b/test/jdk/sun/security/pkcs11/PKCS11Test.java
@@ -99,7 +99,7 @@
     // NSS version info
     public static enum ECCState { None, Basic, Extended };
     static double nss_version = -1;
-    static ECCState nss_ecc_status = ECCState.Extended;
+    static ECCState nss_ecc_status = ECCState.Basic;
 
     // The NSS library we need to search for in getNSSLibDir()
     // Default is "libsoftokn3.so", listed as "softokn3"
--- a/test/jdk/sun/security/pkcs11/ec/TestECDH.java
+++ b/test/jdk/sun/security/pkcs11/ec/TestECDH.java
@@ -124,8 +124,12 @@
             return;
         }
 
-        test(p, pub192a, priv192a, pub192b, priv192b, secret192);
-        test(p, pub163a, priv163a, pub163b, priv163b, secret163);
+        if (getSupportedECParameterSpec("secp192r1", p).isPresent()) {
+            test(p, pub192a, priv192a, pub192b, priv192b, secret192);
+        }
+        if (getSupportedECParameterSpec("sect163r1", p).isPresent()) {
+            test(p, pub163a, priv163a, pub163b, priv163b, secret163);
+        }
 
         if (getSupportedECParameterSpec("brainpoolP256r1", p).isPresent()) {
             test(p, pubBrainpoolP256r1a, privBrainpoolP256r1a, pubBrainpoolP256r1b, privBrainpoolP256r1b, secretBrainpoolP256r1);
--- a/test/jdk/sun/security/pkcs11/ec/TestECDSA.java
+++ b/test/jdk/sun/security/pkcs11/ec/TestECDSA.java
@@ -156,12 +156,14 @@
             return;
         }
 
-        if (getNSSECC() != ECCState.Basic) {
+        if (getSupportedECParameterSpec("secp192r1", provider).isPresent()) {
             test(provider, pub192, priv192, sig192);
+        }
+        if (getSupportedECParameterSpec("sect163r1", provider).isPresent()) {
             test(provider, pub163, priv163, sig163);
+        }
+        if (getSupportedECParameterSpec("sect571r1", provider).isPresent()) {
             test(provider, pub571, priv571, sig571);
-        } else {
-            System.out.println("ECC Basic only, skipping 192, 163 and 571.");
         }
         test(provider, pub521, priv521, sig521);
 
