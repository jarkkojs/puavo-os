Description: Make stylus colors checkable.
Author: Claudio Laurita <claudio.laurita@integrazionetotale.it>

--- a/resources/forms/mainWindow.ui
+++ b/resources/forms/mainWindow.ui
@@ -407,6 +407,12 @@
    </property>
   </action>
   <action name="actionColor0">
+   <property name="checkable">
+    <bool>true</bool>
+   </property>
+   <property name="checked">
+    <bool>true</bool>
+   </property>
    <property name="icon">
     <iconset resource="../OpenBoard.qrc">
      <normaloff>:/images/toolbar/color.png</normaloff>:/images/toolbar/color.png</iconset>
@@ -419,6 +425,9 @@
    </property>
   </action>
   <action name="actionColor1">
+   <property name="checkable">
+    <bool>true</bool>
+   </property>
    <property name="icon">
     <iconset resource="../OpenBoard.qrc">
      <normaloff>:/images/toolbar/color.png</normaloff>:/images/toolbar/color.png</iconset>
@@ -428,6 +437,9 @@
    </property>
   </action>
   <action name="actionColor2">
+   <property name="checkable">
+    <bool>true</bool>
+   </property>
    <property name="icon">
     <iconset resource="../OpenBoard.qrc">
      <normaloff>:/images/toolbar/color.png</normaloff>:/images/toolbar/color.png</iconset>
@@ -437,6 +449,9 @@
    </property>
   </action>
   <action name="actionColor3">
+   <property name="checkable">
+    <bool>true</bool>
+   </property>
    <property name="icon">
     <iconset resource="../OpenBoard.qrc">
      <normaloff>:/images/toolbar/color.png</normaloff>:/images/toolbar/color.png</iconset>
@@ -446,6 +461,9 @@
    </property>
   </action>
   <action name="actionColor4">
+   <property name="checkable">
+    <bool>true</bool>
+   </property>
    <property name="icon">
     <iconset resource="../OpenBoard.qrc">
      <normaloff>:/images/toolbar/color.png</normaloff>:/images/toolbar/color.png</iconset>
--- a/src/desktop/UBDesktopPropertyPalette.cpp
+++ b/src/desktop/UBDesktopPropertyPalette.cpp
@@ -61,10 +61,10 @@
 
     UBToolbarButtonGroup *colorChoice =
             new UBToolbarButtonGroup(UBApplication::mainWindow->boardToolBar, colorActions);
-
     colorChoice->displayText(false);
 
-    //connect(colorChoice, SIGNAL(activated(int)), this, SLOT(UBApplication::boardController->setColorIndex(int)));
+    connect(colorChoice, SIGNAL(activated(int)), UBDrawingController::drawingController(), SLOT(setColorIndex(int)));
+    connect(colorChoice, SIGNAL(activated(int)), this, SLOT(close()));
     connect(UBDrawingController::drawingController(), SIGNAL(colorIndexChanged(int)), colorChoice, SLOT(setCurrentIndex(int)));
     connect(UBDrawingController::drawingController(), SIGNAL(colorIndexChanged(int)), this, SLOT(close()));
     connect(UBDrawingController::drawingController(), SIGNAL(colorPaletteChanged()), colorChoice, SLOT(colorPaletteChanged()));
@@ -159,7 +159,8 @@
     UBToolbarButtonGroup *colorChoice = new UBToolbarButtonGroup(UBApplication::mainWindow->boardToolBar, colorActions);
     colorChoice->displayText(false);
 
-    //connect(colorChoice, SIGNAL(activated(int)), this, SLOT(UBApplication::boardController->setColorIndex(int)));
+    connect(colorChoice, SIGNAL(activated(int)), UBDrawingController::drawingController(), SLOT(setColorIndex(int)));
+    connect(colorChoice, SIGNAL(activated(int)), this, SLOT(close()));
     connect(UBDrawingController::drawingController(), SIGNAL(colorIndexChanged(int)), colorChoice, SLOT(setCurrentIndex(int)));
     connect(UBDrawingController::drawingController(), SIGNAL(colorIndexChanged(int)), this, SLOT(close()));
     connect(UBDrawingController::drawingController(), SIGNAL(colorPaletteChanged()), colorChoice, SLOT(colorPaletteChanged()));
--- a/src/board/UBBoardController.cpp
+++ b/src/board/UBBoardController.cpp
@@ -317,10 +317,12 @@
     mMainWindow->boardToolBar->insertWidget(mMainWindow->actionBackgrounds, colorChoice);
 
     connect(settings->appToolBarDisplayText, SIGNAL(changed(QVariant)), colorChoice, SLOT(displayText(QVariant)));
-    connect(colorChoice, SIGNAL(activated(int)), this, SLOT(setColorIndex(int)));
+    connect(colorChoice, SIGNAL(activated(int)), UBDrawingController::drawingController(), SLOT(setColorIndex(int)));
+    connect(colorChoice, SIGNAL(activated(int)), this, SLOT(close()));
     connect(UBDrawingController::drawingController(), SIGNAL(colorIndexChanged(int)), colorChoice, SLOT(setCurrentIndex(int)));
+    connect(UBDrawingController::drawingController(), SIGNAL(colorIndexChanged(int)), this, SLOT(close()));
     connect(UBDrawingController::drawingController(), SIGNAL(colorPaletteChanged()), colorChoice, SLOT(colorPaletteChanged()));
-    connect(UBDrawingController::drawingController(), SIGNAL(colorPaletteChanged()), this, SLOT(colorPaletteChanged()));
+    connect(UBDrawingController::drawingController(), SIGNAL(colorPaletteChanged()), this, SLOT(close()));
 
     colorChoice->displayText(QVariant(settings->appToolBarDisplayText->get().toBool()));
     colorChoice->colorPaletteChanged();
