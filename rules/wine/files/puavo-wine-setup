#!/bin/sh

set -eu

setup_d_drive() {
  ln -fns "$HOME" "${WINEPREFIX}/dosdevices/d:"
}

setup_link() {
  local backup_dir lang link_name link_src link_target my_language remove \
        user_dirs xdg_user_dir

  user_dirs=$1
  xdg_user_dir=$2
  link_name=$3
  lang=$4
  my_language=$5

  link_src="${WINEPREFIX}/drive_c/users/${USER}/${link_name}"

  remove=false
  if ! printf "%s" "$user_dirs" | grep -qw "$xdg_user_dir"; then
    remove=true
  fi

  if $remove || [ -n "$lang" -a "$my_language" != "$lang" ]; then
    rm -f "$link_src" || return 1
    return 0
  fi

  if ! link_target=$(xdg-user-dir "$xdg_user_dir"); then
    echo "Could not lookup XDG dir for $xdg_user_dir" >&2
    return 1
  fi

  if [ ! -d "$link_target" ]; then
    return 0
  fi

  if [ -h "$link_src" ] \
    && [ "$(readlink "$link_src")" = "$link_target" ]; then
      return 0
  fi

  # Must update link in user Wine home directory.

  # If there is a directory that is not a link,
  # make a backup in case it is non-empty.
  if [ -d "$link_src" -a ! -h "$link_src" ]; then
    backup_dir="${link_src}.$(date +%s)"
    mv -T "$link_src" "$backup_dir" || return 1
    rmdir --ignore-fail-on-non-empty "$backup_dir" || true
  fi

  ln -fns "$link_target" "$link_src" || return 1

  return 0
}

setup_wine_links() {
  local dir lang languages link_name link_setup_status my_language user_dirs \
        user_dirs_arg

  user_dirs_arg=$1
  if [ "$user_dirs" = 'ALL' ]; then
    user_dirs='DESKTOP DOWNLOAD DOCUMENTS MUSIC PICTURES TEMPLATES VIDEOS'
  else
    user_dirs=$(printf "%s" "$user_dirs" | tr , ' ')
  fi

  link_setup_status=0

  case "$LANGUAGE" in
    en|fi|sv) my_language="$LANGUAGE" ;;
    *)        my_language='en'        ;;
  esac

  setup_link "$user_dirs" DOWNLOAD Downloads '' "$my_language" \
    || link_setup_status=1

  setup_link "$user_dirs" TEMPLATES Templates '' "$my_language" \
    || link_setup_status=1

  for dir in DESKTOP DOCUMENTS MUSIC PICTURES VIDEOS; do
    # We iterate through all languages so that we will remove links that
    # are no longer needed.
    languages=$(echo "en\nfi\nsv" | grep -vx "$my_language";
                echo "$my_language")

    link_name=''
    for lang in $languages; do
      case "$lang" in
        fi)
          case "$dir" in
            DESKTOP)   link_name='Työpöytä'               ;;
            DOCUMENTS) link_name='Omat tiedostot'         ;;
            MUSIC)     link_name='Omat musiikkitiedostot' ;;
            PICTURES)  link_name='Omat kuvatiedostot'     ;;
            VIDEOS)    link_name='Omat videotiedostot'    ;;
          esac
          ;;
        sv)
          case "$dir" in
            DESKTOP)   link_name='Skrivbord'       ;;
            DOCUMENTS) link_name='Mina dokument'   ;;
            MUSIC)     link_name='Min musik'       ;;
            PICTURES)  link_name='Mina bilder'     ;;
            VIDEOS)    link_name='Mina videoklipp' ;;
          esac
          ;;
        *)
          case "$dir" in
            DESKTOP)   link_name='Desktop'      ;;
            DOCUMENTS) link_name='My Documents' ;;
            MUSIC)     link_name='My Music'     ;;
            PICTURES)  link_name='My Pictures'  ;;
            VIDEOS)    link_name='My Videos'    ;;
          esac
          ;;
      esac

      if [ "$link_name" = '' ]; then
        echo "No such user dir: '${dir}'" >&2
        link_setup_status=1
        continue
      fi

      setup_link "$user_dirs" "$dir" "$link_name" "$lang" "$my_language" \
        || link_setup_status=1
    done
  done

  return $link_setup_status
}

if [ -z "${WINEPREFIX:-}" ]; then
  echo 'WINEPREFIX is not set, doing nothing' >&2
  exit 1
fi

if [ -z "${HOME:-}" -o -z "${LANGUAGE:-}" -o -z "${USER:-}" ]; then
  echo 'Either HOME or LANGUAGE or USER is not set, doing nothing' >&2
  exit 1
fi

status=0

if ! args=$(getopt -n "$0" -o + -l 'setup-d-drive,user-dirs:' -- "$@"); then
  echo 'Could not parse command line arguments' >&2
  exit 1
fi

setup_d_drive=false
user_dirs=''

eval "set -- $args"
while [ $# -ne 0 ]; do
  case "$1" in
    --setup-d-drive) setup_d_drive=true; shift  ;;
    --user-dirs)     user_dirs=$2; shift; shift ;;
    --) shift; break ;;
    *) echo 'Usage: puavo-wine-setup [--setup-d-drive] [--user-dirs opts]' >&2; status=2; break ;;
  esac
done

if $setup_d_drive; then
  if ! setup_d_drive; then
    echo 'Problem occurred when setting the up D drive.' >&2
    status=1
  fi
fi

if [ -n "$user_dirs" ]; then
  if ! setup_wine_links "$user_dirs"; then
    echo 'Problem occurred when setting up links.' >&2
    status=1
  fi
fi

exit $status
